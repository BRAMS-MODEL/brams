#if !defined(UM_JULES)
! *****************************COPYRIGHT**************************************
! (C) Crown copyright Met Office. All rights reserved.
! For further details please refer to the file COPYRIGHT.txt
! which you should have received as part of this distribution.
! *****************************COPYRIGHT**************************************

MODULE init_mod
CONTAINS
SUBROUTINE init(nml_dir, crop_vars_data, crop_vars,                           &
                   psparms_data, psparms,                                     &
                   toppdm, top_pdm_data,                                      &
                   fire_vars, fire_vars_data,                                 &
                   ainfo, ainfo_data,                                         &
                   trif_vars, trif_vars_data,                                 &
                   soilecosse, soil_ecosse_vars_data,                         &
                   aero_data, aerotype,                                       &
                   urban_param, urban_param_data,                             &
                   progs, progs_data,                                         &
                   trifctl_data, trifctltype,                                 &
                   coastal_data, coast,                                       &
                   jules_vars_data, jules_vars)

USE model_interface_mod,          ONLY: check_variable_metadata
USE init_jules_sf_diags_mod,      ONLY: allocate_sf_diags,                    &
                                        set_sf_diag_switches
USE jules_model_environment_mod,  ONLY: lsm_id, cable, jules
USE time_varying_input_mod,       ONLY: seek_all_to_current_datetime
USE model_time_mod,               ONLY: is_spinup
USE init_grid_mod,                ONLY: init_grid
USE init_ancillaries_mod,         ONLY: init_ancillaries
USE init_params_mod,              ONLY: init_params
USE initial_conditions_mod,       ONLY: init_ic
USE spinup_mod,                   ONLY: spinup_init
USE dump_mod,                     ONLY: write_dump
USE logging_mod,                  ONLY: log_info, init_prnt_control
USE init_output_mod,              ONLY: init_output
USE init_plant_n_uptake_mod,      ONLY: init_plant_n_uptake
USE init_vegetation_mod,          ONLY: init_vegetation
USE init_hydrology_mod,           ONLY: init_hydrology
USE init_model_environment_mod,   ONLY: init_model_environment
USE init_radiation_mod,           ONLY: init_radiation
USE init_snow_mod,                ONLY: init_snow
USE init_surface_types_mod,       ONLY: init_jules_surface_types,             &
                                        init_cable_surface_types
USE init_soil_biogeochem_mod,     ONLY: init_soil_biogeochem
USE init_soil_mod,                ONLY: init_soil
USE init_surface_mod,             ONLY: init_surface
USE init_rivers_mod,              ONLY: init_rivers
USE init_water_resources_mod,     ONLY: init_water_resources
USE metstats_init_mod,            ONLY: metstats_init
USE init_parms_mod,               ONLY: init_parms
USE init_soil_ecosse_mod,         ONLY: init_soil_ecosse
USE init_check_compatibility_mod, ONLY: init_check_compatibility
USE init_cable_mod,               ONLY: init_cable_grid, init_cable_veg
USE init_deposition_mod,          ONLY: init_deposition
USE allocate_cable_arrays_mod,    ONLY: allocate_cable_arrays
USE jules_science_fixes_mod,      ONLY: init_science_fixes
USE land_tile_ids,                ONLY: set_tile_id_arrays
USE jules_surface_mod,            ONLY: l_surface_type_ids

! Get fields for veg3_init
USE jules_surface_types_mod,      ONLY: npft, nnpft, ntype
USE ancil_info,                   ONLY: land_pts, nsurft, nmasst
USE veg3_parm_mod,                ONLY: veg3_parm_init
USE veg3_field_mod,               ONLY: veg3_field_init

!TYPE definitions
USE crop_vars_mod,                ONLY: crop_vars_data_type,                  &
                                        crop_vars_type,                       &
                                        crop_vars_assoc
USE p_s_parms,                    ONLY: psparms_data_type,                    &
                                        psparms_type,                         &
                                        psparms_assoc
USE top_pdm,                      ONLY: top_pdm_data_type,                    &
                                        top_pdm_type,                         &
                                        top_pdm_assoc
USE fire_vars_mod,                ONLY: fire_vars_data_type,                  &
                                        fire_vars_type,                       &
                                        fire_vars_assoc
USE ancil_info,                   ONLY: ainfo_data_type,                      &
                                        ainfo_type,                           &
                                        ancil_info_assoc
USE trif_vars_mod,                ONLY: trif_vars_data_type,                  &
                                        trif_vars_type,                       &
                                        trif_vars_assoc
USE soil_ecosse_vars_mod,         ONLY: soil_ecosse_vars_data_type,           &
                                        soil_ecosse_vars_type,                &
                                        soil_ecosse_vars_assoc
USE aero,                         ONLY: aero_data_type,                       &
                                        aero_type,                            &
                                        aero_assoc
USE urban_param_mod,              ONLY: urban_param_data_type,                &
                                        urban_param_type,                     &
                                        urban_param_assoc
USE prognostics,                  ONLY: progs_data_type,                      &
                                        progs_type,                           &
                                        prognostics_assoc
USE trifctl,                      ONLY: trifctl_data_type,                    &
                                        trifctl_type,                         &
                                        trifctl_assoc
USE coastal,                      ONLY: coastal_data_type,                    &
                                        coastal_type,                         &
                                        coastal_assoc
USE jules_vars_mod,               ONLY: jules_vars_data_type,                 &
                                        jules_vars_type,                      &
                                        jules_vars_assoc

IMPLICIT NONE

!-----------------------------------------------------------------------------
! Description:
!   The main initialisation routine - initialises the model by calling
!   specialised routines
!
! Code Owner: Please refer to ModuleLeaders.txt
! This file belongs in TECHNICAL
!
! Code Description:
!   Language: Fortran 90.
!   This code is written to JULES coding standards v1.
!-----------------------------------------------------------------------------
! Arguments
CHARACTER(LEN=*), INTENT(IN) :: nml_dir  ! The directory containing the
                                         ! namelists

!TYPES containing the data passed down to be allocated when possible
TYPE(crop_vars_data_type), INTENT(IN OUT) :: crop_vars_data
TYPE(psparms_data_type), INTENT(IN OUT) :: psparms_data
TYPE(top_pdm_data_type), INTENT(IN OUT) :: top_pdm_data
TYPE(fire_vars_data_type), INTENT(IN OUT) :: fire_vars_data
TYPE(ainfo_data_type), INTENT(IN OUT) :: ainfo_data
TYPE(trif_vars_data_type), INTENT(IN OUT) :: trif_vars_data
TYPE(soil_ecosse_vars_data_type), INTENT(IN OUT) :: soil_ecosse_vars_data
TYPE(aero_data_type), INTENT(IN OUT) :: aero_data
TYPE(urban_param_data_type), INTENT(IN OUT) :: urban_param_data
TYPE(progs_data_type), INTENT(IN OUT) :: progs_data
TYPE(trifctl_data_type), INTENT(IN OUT) :: trifctl_data
TYPE(coastal_data_type), INTENT(IN OUT) :: coastal_data
TYPE(jules_vars_data_type), INTENT(IN OUT) :: jules_vars_data

!TYPES pointing to data
TYPE(crop_vars_type), INTENT(IN OUT) :: crop_vars
TYPE(psparms_type), INTENT(IN OUT) :: psparms
TYPE(top_pdm_type), INTENT(IN OUT) :: toppdm
TYPE(fire_vars_type), INTENT(IN OUT) :: fire_vars
TYPE(ainfo_type), INTENT(IN OUT) :: ainfo
TYPE(trif_vars_type), INTENT(IN OUT) :: trif_vars
TYPE(soil_ecosse_vars_type), INTENT(IN OUT) :: soilecosse
TYPE(aero_type), INTENT(IN OUT) :: aerotype
TYPE(urban_param_type), INTENT(IN OUT) :: urban_param
TYPE(progs_type), INTENT(IN OUT) :: progs
TYPE(trifctl_type), INTENT(IN OUT) :: trifctltype
TYPE(coastal_type), INTENT(IN OUT) :: coast
TYPE(jules_vars_type), INTENT(IN OUT) :: jules_vars

!-----------------------------------------------------------------------------

! Check that the metadata for variables is acceptable.
CALL check_variable_metadata

! Set options for output of diagnostic and informative messages.
CALL init_prnt_control(nml_dir)

! Determine what environment JULES is being run in
CALL init_model_environment(nml_dir)

! Initialise the surface types
CALL init_jules_surface_types(nml_dir)

IF ( lsm_id == cable ) THEN
  CALL init_cable_surface_types(nml_dir)
END IF

! Initialise the surface options
CALL init_surface(nml_dir)

! Intialise the times for the run
CALL init_time(nml_dir)

! Initialise radiation options
CALL init_radiation(nml_dir)

! Initialise hydrology options
CALL init_hydrology(nml_dir)

! Initialise soil options
CALL init_soil(nml_dir)

! Initialise vegetation options
! Must be called after init_soil to check soil tiling flags
CALL init_vegetation(nml_dir)

! Initialise irrigation options
CALL init_irrigation(nml_dir)

! Initialise vegetation N uptake model options
CALL init_plant_n_uptake(nml_dir)

! Initialise soil biogeochemistry options.
CALL init_soil_biogeochem(nml_dir)

! Initialise ECOSSE soil biogeochemistry options.
CALL init_soil_ecosse(nml_dir)

! Initialise atmospheric deposition module.
CALL init_deposition(nml_dir)

! Initialise snow options
CALL init_snow(nml_dir)

! Initialise river routing parameters, ancils and grid
CALL init_rivers(nml_dir)

! Initialise water resource options.
CALL init_water_resources(nml_dir)

! Initialise two-tile urban schemes (not ancillary data) and must be called
! after init_radiation
CALL init_urban(nml_dir)

! Initialise science fixes
CALL init_science_fixes(nml_dir)

! Initialise the input, model and output grids **also allocates arrays**
CALL init_grid(nml_dir, crop_vars_data,psparms_data,top_pdm_data,             &
               fire_vars_data,ainfo_data,trif_vars_data,                      &
               soil_ecosse_vars_data, aero_data, urban_param_data, progs_data,&
               trifctl_data, coastal_data,jules_vars_data)

!Associate the data and pointer types
CALL crop_vars_assoc(crop_vars, crop_vars_data)
CALL psparms_assoc(psparms,psparms_data)
CALL top_pdm_assoc(toppdm, top_pdm_data)
CALL fire_vars_assoc(fire_vars, fire_vars_data)
CALL ancil_info_assoc(ainfo, ainfo_data)
CALL trif_vars_assoc(trif_vars, trif_vars_data)
CALL soil_ecosse_vars_assoc(soilecosse, soil_ecosse_vars_data)
CALL aero_assoc(aerotype,aero_data)
CALL urban_param_assoc(urban_param, urban_param_data)
CALL prognostics_assoc(progs,progs_data)
CALL trifctl_assoc(trifctltype, trifctl_data)
CALL coastal_assoc(coast,coastal_data)
CALL jules_vars_assoc(jules_vars,jules_vars_data)

! Initialise the model ancils
CALL init_ancillaries(nml_dir, crop_vars, ainfo, trif_vars, urban_param,      &
                      trifctltype)

! Initialise model parameters
CALL init_params(nml_dir,progs)

! Initialise fire module
CALL init_fire(nml_dir,ainfo%land_index)

! Initialise the metstats module
CALL metstats_init(ainfo)

! Contains allocation of progs_data%seed_rain - hence passing in the data type
CALL init_drive(nml_dir,ainfo,progs)

! Initialise IMOGEN
! Contains allocation of progs_data%seed_rain - hence passing in the data type
CALL init_imogen(nml_dir,progs_data, trifctltype)

! Associate the data and pointer types again after the extra allocation
CALL prognostics_assoc(progs,progs_data)

! Initialise other prescribed data
CALL init_prescribed_data(nml_dir)

! Initialise the model prognostics
CALL init_ic(nml_dir, crop_vars,psparms,toppdm,ainfo,trif_vars, soilecosse,   &
             urban_param, progs, jules_vars)

! Initialise output
CALL init_output(nml_dir)

!-----------------------------------------------------------------------------
! Other initialisation that does not depend on further user input.
!-----------------------------------------------------------------------------

! Check that the enabled schemes are compatible
CALL init_check_compatibility()

! Set tile ID numbers
IF ( l_surface_type_ids ) CALL set_tile_id_arrays ( )

! Set sf_diag switches that are required by the science configuration (not by
! the choice of diagnostics).
CALL set_sf_diag_switches

! Allocate for coupled model diagnostics (sf_diag).
CALL allocate_sf_diags

! Further initialisation of variables.
CALL init_vars_tmp(crop_vars,psparms,toppdm,ainfo,trif_vars, aerotype,        &
                   progs,trifctltype, coast, jules_vars)

! Set index arrays and initialise other variables.
CALL init_parms(psparms,ainfo,urban_param,progs,coast,jules_vars)

! Setup and initialise veg3
CALL veg3_parm_init(land_pts,nsurft,nnpft,npft,nmasst)
CALL veg3_field_init(land_pts,nsurft,nnpft,npft,nmasst,ainfo,progs)

! Seek the input files to the start of the run
CALL seek_all_to_current_datetime()

! If the LSM is CABLE, initialise CABLE variables
IF ( lsm_id == cable ) THEN
  CALL allocate_cable_arrays()
  CALL init_cable_grid()
  CALL init_cable_veg()
END IF

! Save initial state if spinning up. Arrays are allocated here.
IF ( is_spinup ) CALL spinup_init(progs,trifctltype)

! Write an initial dump
CALL write_dump()

CALL log_info("init", "Initialisation is complete")

RETURN

END SUBROUTINE init
END MODULE init_mod
#endif
