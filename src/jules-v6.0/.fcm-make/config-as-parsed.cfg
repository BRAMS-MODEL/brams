steps = extract preprocess build
extract.ns = jules
extract.location[jules] = /home/lufla/workspace/BRAMS-6.0/source/jules-v6.0
extract.path-excl[jules] = / src/control/um src/initialisation/um      src/science/snow/snow_intctl.F90            src/science/surface/flake_interface.F90     src/params/um                               src/science/river_routing/um
preprocess.target{category} = src
preprocess.target{task} = install process
preprocess.prop{file-ext.h} = .inc
build.target = rose-jules-run jules.exe
build.prop{ns-dep.o}[jules/src/control/standalone/jules.F90] = jules/src/initialisation/standalone jules/src/science                   jules/src/control/imogen            jules/utils
build.prop{dep.o}[jules/src/control/standalone/jules.F90] = control.o next_time.o
build.prop{fc} = gfortran
extract.path-incl[jules] = bin src utils/drhook_dummy utils/mpi_dummy
preprocess.prop{fpp.defs} = SCMA BL_DIAG_HACK GNU_FORTRAN MPI_DUMMY
build.prop{fc.flags} =  -std=f2003 -fall-intrinsics -fmax-identifier-length=63  -ffree-line-length-132   -fimplicit-none -fbounds-check -Warray-bounds -fallow-argument-mismatch -O3  
build.prop{fc.flags-ld} =    -Wl,--rpath=/opt/apps/lib 
build.prop{fc.defs} = SCMA BL_DIAG_HACK GNU_FORTRAN MPI_DUMMY
build.prop{no-dep.f.module} =  netcdf
build.prop{fc.libs} =  netcdff
build.prop{fc.include-paths} =  /opt/apps/include
build.prop{fc.lib-paths} =  /opt/apps/lib
